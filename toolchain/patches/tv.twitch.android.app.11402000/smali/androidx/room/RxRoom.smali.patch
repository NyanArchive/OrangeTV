diff --git a/smali/androidx/room/RxRoom.smali b/smali/androidx/room/RxRoom.smali
--- a/smali/androidx/room/RxRoom.smali
+++ b/smali/androidx/room/RxRoom.smali
@@ -57,3 +57,126 @@
 
     return-object p0
 .end method
+
+.method public static createObservable(Landroidx/room/RoomDatabase;Z[Ljava/lang/String;Ljava/util/concurrent/Callable;)Lio/reactivex/Observable;
+    .registers 8
+    .param p0, "database"    # Landroidx/room/RoomDatabase;
+    .param p1, "inTransaction"    # Z
+    .param p2, "tableNames"    # [Ljava/lang/String;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "<T:",
+            "Ljava/lang/Object;",
+            ">(",
+            "Landroidx/room/RoomDatabase;",
+            "Z[",
+            "Ljava/lang/String;",
+            "Ljava/util/concurrent/Callable<",
+            "TT;>;)",
+            "Lio/reactivex/Observable<",
+            "TT;>;"
+        }
+    .end annotation
+
+    .line 203
+    .local p3, "callable":Ljava/util/concurrent/Callable;, "Ljava/util/concurrent/Callable<TT;>;"
+    invoke-static {p0, p1}, Landroidx/room/RxRoom;->getExecutor(Landroidx/room/RoomDatabase;Z)Ljava/util/concurrent/Executor;
+
+    move-result-object v0
+
+    invoke-static {v0}, Lio/reactivex/schedulers/Schedulers;->from(Ljava/util/concurrent/Executor;)Lio/reactivex/Scheduler;
+
+    move-result-object v0
+
+    .line 204
+    .local v0, "scheduler":Lio/reactivex/Scheduler;
+    invoke-static {p3}, Lio/reactivex/Maybe;->fromCallable(Ljava/util/concurrent/Callable;)Lio/reactivex/Maybe;
+
+    move-result-object v1
+
+    .line 205
+    .local v1, "maybe":Lio/reactivex/Maybe;, "Lio/reactivex/Maybe<TT;>;"
+    invoke-static {p0, p2}, Landroidx/room/RxRoom;->createObservable(Landroidx/room/RoomDatabase;[Ljava/lang/String;)Lio/reactivex/Observable;
+
+    move-result-object v2
+
+    .line 206
+    invoke-virtual {v2, v0}, Lio/reactivex/Observable;->subscribeOn(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;
+
+    move-result-object v2
+
+    .line 207
+    invoke-virtual {v2, v0}, Lio/reactivex/Observable;->unsubscribeOn(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;
+
+    move-result-object v2
+
+    .line 208
+    invoke-virtual {v2, v0}, Lio/reactivex/Observable;->observeOn(Lio/reactivex/Scheduler;)Lio/reactivex/Observable;
+
+    move-result-object v2
+
+    new-instance v3, Landroidx/room/RxRoom$4;
+
+    invoke-direct {v3, v1}, Landroidx/room/RxRoom$4;-><init>(Lio/reactivex/Maybe;)V
+
+    .line 209
+    invoke-virtual {v2, v3}, Lio/reactivex/Observable;->flatMapMaybe(Lio/reactivex/functions/Function;)Lio/reactivex/Observable;
+
+    move-result-object v2
+
+    .line 205
+    return-object v2
+.end method
+
+.method private static getExecutor(Landroidx/room/RoomDatabase;Z)Ljava/util/concurrent/Executor;
+    .registers 3
+    .param p0, "database"    # Landroidx/room/RoomDatabase;
+    .param p1, "inTransaction"    # Z
+
+    .line 238
+    if-eqz p1, :cond_7
+
+    .line 239
+    invoke-virtual {p0}, Landroidx/room/RoomDatabase;->getTransactionExecutor()Ljava/util/concurrent/Executor;
+
+    move-result-object v0
+
+    return-object v0
+
+    .line 241
+    :cond_7
+    invoke-virtual {p0}, Landroidx/room/RoomDatabase;->getQueryExecutor()Ljava/util/concurrent/Executor;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public static varargs createObservable(Landroidx/room/RoomDatabase;[Ljava/lang/String;)Lio/reactivex/Observable;
+    .registers 3
+    .param p0, "database"    # Landroidx/room/RoomDatabase;
+    .param p1, "tableNames"    # [Ljava/lang/String;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Landroidx/room/RoomDatabase;",
+            "[",
+            "Ljava/lang/String;",
+            ")",
+            "Lio/reactivex/Observable<",
+            "Ljava/lang/Object;",
+            ">;"
+        }
+    .end annotation
+
+    .line 155
+    new-instance v0, Landroidx/room/RxRoom$3;
+
+    invoke-direct {v0, p1, p0}, Landroidx/room/RxRoom$3;-><init>([Ljava/lang/String;Landroidx/room/RoomDatabase;)V
+
+    invoke-static {v0}, Lio/reactivex/Observable;->create(Lio/reactivex/ObservableOnSubscribe;)Lio/reactivex/Observable;
+
+    move-result-object v0
+
+    return-object v0
+.end method
